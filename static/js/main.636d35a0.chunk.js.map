{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInputOnChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","className","style","formGroup","type","pattern","title","required","onChange","Button","variant","startIcon","Component","useStyles","makeStyles","root","background","border","borderRadius","color","padding","margin","cursor","ContactItem","onClick","classes","ContactList","contacts","onDeleteContact","map","id","listItem","Filter","App","filter","contactId","uuidv4","formSubmitHandler","newContact","contact","toLowerCase","includes","toast","warn","addContact","success","prevState","seachContactByName","contactName","getVisibleContacts","normalizedFilter","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","position","autoClose","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.636d35a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"ContactForm_formGroup__1oaXq\",\"form-group\":\"ContactForm_form-group___Rk7y\",\"button\":\"ContactForm_button__zr10w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__1Wn92\",\"listItem\":\"ContactList_listItem__3UkNU\"};","import React, { Component } from 'react';\nimport style from './ContactForm.module.css';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputOnChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className={style.formGroup}>\n          <label>\n            Name{' '}\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleInputOnChange}\n            />\n          </label>\n\n          <label>\n            Number{' '}\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={this.handleInputOnChange}\n            />\n          </label>\n        </div>\n\n        <Button type=\"submit\" variant=\"contained\" startIcon={<AddIcon />}>\n          Add contact\n        </Button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'grey',\n    border: 0,\n    borderRadius: 3,\n    color: 'black',\n    padding: '2px 5px',\n    margin: '5px 15px',\n    cursor: 'pointer',\n  },\n});\n\nconst ContactItem = ({ name, number, onClick }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      {name}: {number}\n      <Button\n        type=\"button\"\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.root}\n        startIcon={<DeleteIcon />}\n        onClick={onClick}\n      >\n        Delete\n      </Button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './ContactList.module.css';\nimport ContactItem from './ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ol>\n    {contacts.map(({ name, number, id }) => (\n      <li key={id} className={style.listItem}>\n        <ContactItem\n          name={name}\n          number={number}\n          onClick={() => onDeleteContact(id)}\n        />\n      </li>\n    ))}\n  </ol>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.shape.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      {' '}\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport './App.css';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\n// import initialContacts from './data/contacts.json';\nimport { v4 as uuidv4 } from 'uuid';\nimport Filter from './components/Filter';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  contactId = uuidv4();\n\n  formSubmitHandler = newContact => {\n    const similarName = this.state.contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(newContact.name.toLowerCase());\n\n    const notifyWarn = () =>\n      toast.warn(`${newContact.name} is already in phonebook !`);\n\n    const notifySuccess = () =>\n      toast.success(`${newContact.name} is added in phonebook !`);\n\n    if (similarName) {\n      notifyWarn();\n    } else {\n      const addContact = {\n        id: this.contactId,\n        ...newContact,\n      };\n      notifySuccess();\n\n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, addContact],\n      }));\n    }\n  };\n\n  onDeleteContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  seachContactByName = contactName => {\n    this.setState({ filter: contactName.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  componentDidMount() {\n    console.log('App componentDidMount');\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n\n    console.log(parsedContacts);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Update');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    console.log('App render');\n\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"Container\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n\n        <Filter value={filter} onChange={this.seachContactByName} />\n\n        <h2>Contacts</h2>\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.onDeleteContact}\n        />\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={2000}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss={false}\n          draggable={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}